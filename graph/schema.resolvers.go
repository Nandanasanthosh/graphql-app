package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	//"fmt"

	"github.com/Nandanasanthosh/hackernews/graph/model"
)

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateTodo(ctx context.Context, input model.NewTodo) (*model.Todo, error) {
	var todos model.Todo
	var user model.User
	todos.ID = "2"
	todos.Text = input.Text
	todos.Done = true
	user.ID = input.ID
	user.Name = "test"
	todos.User = &user
	return &todos, nil
}

// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(ctx context.Context) ([]*model.Todo, error) {
	var todo []*model.Todo
	dummyTodo := model.Todo{
		ID:   "1",
		Text: "our dummy todo",
		Done: true,
		User: &model.User{Name: "admin"},
	}
	todo = append(todo, &dummyTodo)
	return todo, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
